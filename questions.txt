Frågor
1. Vad menas med versionshantering?

    Att historik och förändringar sparas och loggas så att det går att återskapa tidigare versioner.

2. Vad menas med en “merge” ?

    Att integrera förändringar från en branch in i en annan.
    Detta innebär att båda branchernas historia blir gemensam.

3. Om du vill merga ihop två brancher från terminalen, hur gör du då?

    git checkout <branch som önskas merga till>
    git merge <branch som ska mergas från>

4. Nämn ett alternativ till Git.

    Apache Subversion, SVN

5. Är Git ett verktyg som erbjuds av Github, eller kan man använda Git på andra ställen?

    Git är ett versionhanteringssystem som skapades av Linus Thorvalds, skaparen av Linux.
    GitHub är en hemsida som hostar Git-repositories så att de blir tillgängliga över internet.
    GitHub har inte skapat Git och det går att använda Git på många andra stället, t.ex. GitLab,
    BitBucket, SourceForge, AWS CodeCommit m.m.

6. Vad menas med en “merge conflict” och när kan det uppstå?

    En merge conflict innebär att Git inte kan räkna ut hur en branch ska integreras med en annan.
    Det kan uppstå när samma fil har ändrats på samma ställe i bägge brancher och därför inte har
    samma versionshistorik. Git kan inte lista ut vilken version det ska vara då och säger "merge conflict"

7. Om du vill se en lista med tidigare ändringar / commits i ett Git repo via terminalen, vad skriver
du?

    git log

8. När du skriver “git init” i en mapp, på vilket sätt ändras då mappen?

    Det läggs till en mapp som heter .git som innehåller all nödvändig data om projektet för att
    versionshanteringen skall fungera

9. Varför vill man dela ibland upp sina ändringar i separata “brancher”?

    När en branch skapas så görs en kopia av koden så som den är vid det tillfället.
    Detta är bra ifall en utvecklare t.ex. vill skapa en ny funktion i projektet, då kan
    utvecklaren göra en egen branch och vara säker på att ingen annan kommer att göra förändringar
    som påverkar funktionen. Det är även bra för överskådligheten i projektet, t.ex. om alla
    funktioner har sin egen branch under tiden de utvecklas så är det enkelt att se hur många
    funktioner som är under utveckling.

10. Nämn ett Git command som inte gör några förändringar på remote servern (Github är
tex en remote server), Nämn även ett Git command som gör förändringar på remote servern.

    Git command som inte gör några förändringar på remote servern:
    git commit

    Git command som gör förändringar på remote servern:
    git push